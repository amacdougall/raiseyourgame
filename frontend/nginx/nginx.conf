# will be enclosed in http { ... } block by nginx

server {
  listen 80;
  listen [::]:80;

  server_name localhost; # for now

  # location /api {
  #   # TODO: lock down the cors situation a bit? This is for dev right now.
  #   if ($request_method = 'OPTIONS') {
  #     add_header 'Access-Control-Max-Age' 1728000;
  #     add_header 'Access-Control-Allow-Origin' '*';
  #     add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
  #     X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
  #     add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
  #     add_header 'Content-Type' 'application/json';
  #     add_header 'Content-Length' 0;
  #     return 204;
  #   }

  #   add_header 'Access-Control-Allow-Origin' '*';
  #   add_header 'Access-Control-Allow-Credentials' 'true';
  #   add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
  #   add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

  #   proxy_pass http://nodejs-server:5000;
  #   proxy_set_header Host $http_host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  # }

  location /graphql {
    # Use Docker DNS resolver to handle domains like 'graphql-server'.
    resolver 127.0.0.11; # docker DNS resolver

    rewrite /graphql/(.*) /$1 break;

    # This variable dance stops nginx from trying to find graphql-server at
    # startup, which fails if it's not up yet.
    set $upstream "graphql-server:4000";
    proxy_pass http://$upstream;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # serve static HTML; Dockerfile should copy from frontend dist folder
  location / {
    root /usr/share/nginx/html;
    index index.html;
    try_files $uri $uri/ /index.html; # redirect to index.html if not found
  }
}
