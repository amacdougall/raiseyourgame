services:
  frontend:
    profiles: ["frontend"]
    stdin_open: true
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - /app/node_modules
      - ./frontend:/app
    networks:
      - frontend
  nodejs-server:
    profiles: ["nodejs-server"]
    build:
      context: ./nodejs-server
      dockerfile: Dockerfile
    container_name: nodejs-server
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: raiseyourgame
      MONGODB_USERNAME: raiseyourgame-user
      MONGODB_PASSWORD: filigree patina molecule
      MONGODB_HOSTNAME: mongodb
    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
  graphql-server:
    profiles: ["graphql-server"]
    build:
      context: ./graphql-server
      dockerfile: Dockerfile
    container_name: graphql-server
    restart: unless-stopped
    # ports:
    #   - "4000:4000"
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: raiseyourgame
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: digitalocean.com/webserver:latest
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - nodejs-server
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local
